package com.zhiye.common.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZyDictionaryParams {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public ZyDictionaryParams() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    protected ZyDictionaryParams(ZyDictionaryParams example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table zy_dictionary
     *
     * @abatorgenerated Thu Apr 12 15:12:08 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCodeIsNull() {
            addCriterion("Code is null");
            return this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("Code is not null");
            return this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("Code =", value, "code");
            return this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("Code <>", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("Code >", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Code >=", value, "code");
            return this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("Code <", value, "code");
            return this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("Code <=", value, "code");
            return this;
        }

        public Criteria andCodeIn(List values) {
            addCriterion("Code in", values, "code");
            return this;
        }

        public Criteria andCodeNotIn(List values) {
            addCriterion("Code not in", values, "code");
            return this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("Code between", value1, value2, "code");
            return this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("Code not between", value1, value2, "code");
            return this;
        }

        public Criteria andDictidIsNull() {
            addCriterion("DictID is null");
            return this;
        }

        public Criteria andDictidIsNotNull() {
            addCriterion("DictID is not null");
            return this;
        }

        public Criteria andDictidEqualTo(String value) {
            addCriterion("DictID =", value, "dictid");
            return this;
        }

        public Criteria andDictidNotEqualTo(String value) {
            addCriterion("DictID <>", value, "dictid");
            return this;
        }

        public Criteria andDictidGreaterThan(String value) {
            addCriterion("DictID >", value, "dictid");
            return this;
        }

        public Criteria andDictidGreaterThanOrEqualTo(String value) {
            addCriterion("DictID >=", value, "dictid");
            return this;
        }

        public Criteria andDictidLessThan(String value) {
            addCriterion("DictID <", value, "dictid");
            return this;
        }

        public Criteria andDictidLessThanOrEqualTo(String value) {
            addCriterion("DictID <=", value, "dictid");
            return this;
        }

        public Criteria andDictidLike(String value) {
            addCriterion("DictID like", value, "dictid");
            return this;
        }

        public Criteria andDictidNotLike(String value) {
            addCriterion("DictID not like", value, "dictid");
            return this;
        }

        public Criteria andDictidIn(List values) {
            addCriterion("DictID in", values, "dictid");
            return this;
        }

        public Criteria andDictidNotIn(List values) {
            addCriterion("DictID not in", values, "dictid");
            return this;
        }

        public Criteria andDictidBetween(String value1, String value2) {
            addCriterion("DictID between", value1, value2, "dictid");
            return this;
        }

        public Criteria andDictidNotBetween(String value1, String value2) {
            addCriterion("DictID not between", value1, value2, "dictid");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("Name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("Name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("Name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("Name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("Name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("Name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("Name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("Name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("Name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("Name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("Name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("Name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("Name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("Name not between", value1, value2, "name");
            return this;
        }

        public Criteria andFlagIsNull() {
            addCriterion("Flag is null");
            return this;
        }

        public Criteria andFlagIsNotNull() {
            addCriterion("Flag is not null");
            return this;
        }

        public Criteria andFlagEqualTo(Integer value) {
            addCriterion("Flag =", value, "flag");
            return this;
        }

        public Criteria andFlagNotEqualTo(Integer value) {
            addCriterion("Flag <>", value, "flag");
            return this;
        }

        public Criteria andFlagGreaterThan(Integer value) {
            addCriterion("Flag >", value, "flag");
            return this;
        }

        public Criteria andFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("Flag >=", value, "flag");
            return this;
        }

        public Criteria andFlagLessThan(Integer value) {
            addCriterion("Flag <", value, "flag");
            return this;
        }

        public Criteria andFlagLessThanOrEqualTo(Integer value) {
            addCriterion("Flag <=", value, "flag");
            return this;
        }

        public Criteria andFlagIn(List values) {
            addCriterion("Flag in", values, "flag");
            return this;
        }

        public Criteria andFlagNotIn(List values) {
            addCriterion("Flag not in", values, "flag");
            return this;
        }

        public Criteria andFlagBetween(Integer value1, Integer value2) {
            addCriterion("Flag between", value1, value2, "flag");
            return this;
        }

        public Criteria andFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("Flag not between", value1, value2, "flag");
            return this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("Remarks is null");
            return this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("Remarks is not null");
            return this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("Remarks =", value, "remarks");
            return this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("Remarks <>", value, "remarks");
            return this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("Remarks >", value, "remarks");
            return this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("Remarks >=", value, "remarks");
            return this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("Remarks <", value, "remarks");
            return this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("Remarks <=", value, "remarks");
            return this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("Remarks like", value, "remarks");
            return this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("Remarks not like", value, "remarks");
            return this;
        }

        public Criteria andRemarksIn(List values) {
            addCriterion("Remarks in", values, "remarks");
            return this;
        }

        public Criteria andRemarksNotIn(List values) {
            addCriterion("Remarks not in", values, "remarks");
            return this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("Remarks between", value1, value2, "remarks");
            return this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("Remarks not between", value1, value2, "remarks");
            return this;
        }
    }
}