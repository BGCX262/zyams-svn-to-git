package com.zhiye.common.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZyDictclassParams {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public ZyDictclassParams() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    protected ZyDictclassParams(ZyDictclassParams example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table zy_dictclass
     *
     * @abatorgenerated Thu Apr 12 16:35:35 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andDictidIsNull() {
            addCriterion("DictID is null");
            return this;
        }

        public Criteria andDictidIsNotNull() {
            addCriterion("DictID is not null");
            return this;
        }

        public Criteria andDictidEqualTo(String value) {
            addCriterion("DictID =", value, "dictid");
            return this;
        }

        public Criteria andDictidNotEqualTo(String value) {
            addCriterion("DictID <>", value, "dictid");
            return this;
        }

        public Criteria andDictidGreaterThan(String value) {
            addCriterion("DictID >", value, "dictid");
            return this;
        }

        public Criteria andDictidGreaterThanOrEqualTo(String value) {
            addCriterion("DictID >=", value, "dictid");
            return this;
        }

        public Criteria andDictidLessThan(String value) {
            addCriterion("DictID <", value, "dictid");
            return this;
        }

        public Criteria andDictidLessThanOrEqualTo(String value) {
            addCriterion("DictID <=", value, "dictid");
            return this;
        }

        public Criteria andDictidLike(String value) {
            addCriterion("DictID like", value, "dictid");
            return this;
        }

        public Criteria andDictidNotLike(String value) {
            addCriterion("DictID not like", value, "dictid");
            return this;
        }

        public Criteria andDictidIn(List values) {
            addCriterion("DictID in", values, "dictid");
            return this;
        }

        public Criteria andDictidNotIn(List values) {
            addCriterion("DictID not in", values, "dictid");
            return this;
        }

        public Criteria andDictidBetween(String value1, String value2) {
            addCriterion("DictID between", value1, value2, "dictid");
            return this;
        }

        public Criteria andDictidNotBetween(String value1, String value2) {
            addCriterion("DictID not between", value1, value2, "dictid");
            return this;
        }

        public Criteria andDictnameIsNull() {
            addCriterion("DictName is null");
            return this;
        }

        public Criteria andDictnameIsNotNull() {
            addCriterion("DictName is not null");
            return this;
        }

        public Criteria andDictnameEqualTo(String value) {
            addCriterion("DictName =", value, "dictname");
            return this;
        }

        public Criteria andDictnameNotEqualTo(String value) {
            addCriterion("DictName <>", value, "dictname");
            return this;
        }

        public Criteria andDictnameGreaterThan(String value) {
            addCriterion("DictName >", value, "dictname");
            return this;
        }

        public Criteria andDictnameGreaterThanOrEqualTo(String value) {
            addCriterion("DictName >=", value, "dictname");
            return this;
        }

        public Criteria andDictnameLessThan(String value) {
            addCriterion("DictName <", value, "dictname");
            return this;
        }

        public Criteria andDictnameLessThanOrEqualTo(String value) {
            addCriterion("DictName <=", value, "dictname");
            return this;
        }

        public Criteria andDictnameLike(String value) {
            addCriterion("DictName like", value, "dictname");
            return this;
        }

        public Criteria andDictnameNotLike(String value) {
            addCriterion("DictName not like", value, "dictname");
            return this;
        }

        public Criteria andDictnameIn(List values) {
            addCriterion("DictName in", values, "dictname");
            return this;
        }

        public Criteria andDictnameNotIn(List values) {
            addCriterion("DictName not in", values, "dictname");
            return this;
        }

        public Criteria andDictnameBetween(String value1, String value2) {
            addCriterion("DictName between", value1, value2, "dictname");
            return this;
        }

        public Criteria andDictnameNotBetween(String value1, String value2) {
            addCriterion("DictName not between", value1, value2, "dictname");
            return this;
        }

        public Criteria andVisibleIsNull() {
            addCriterion("Visible is null");
            return this;
        }

        public Criteria andVisibleIsNotNull() {
            addCriterion("Visible is not null");
            return this;
        }

        public Criteria andVisibleEqualTo(String value) {
            addCriterion("Visible =", value, "visible");
            return this;
        }

        public Criteria andVisibleNotEqualTo(String value) {
            addCriterion("Visible <>", value, "visible");
            return this;
        }

        public Criteria andVisibleGreaterThan(String value) {
            addCriterion("Visible >", value, "visible");
            return this;
        }

        public Criteria andVisibleGreaterThanOrEqualTo(String value) {
            addCriterion("Visible >=", value, "visible");
            return this;
        }

        public Criteria andVisibleLessThan(String value) {
            addCriterion("Visible <", value, "visible");
            return this;
        }

        public Criteria andVisibleLessThanOrEqualTo(String value) {
            addCriterion("Visible <=", value, "visible");
            return this;
        }

        public Criteria andVisibleLike(String value) {
            addCriterion("Visible like", value, "visible");
            return this;
        }

        public Criteria andVisibleNotLike(String value) {
            addCriterion("Visible not like", value, "visible");
            return this;
        }

        public Criteria andVisibleIn(List values) {
            addCriterion("Visible in", values, "visible");
            return this;
        }

        public Criteria andVisibleNotIn(List values) {
            addCriterion("Visible not in", values, "visible");
            return this;
        }

        public Criteria andVisibleBetween(String value1, String value2) {
            addCriterion("Visible between", value1, value2, "visible");
            return this;
        }

        public Criteria andVisibleNotBetween(String value1, String value2) {
            addCriterion("Visible not between", value1, value2, "visible");
            return this;
        }
    }
}