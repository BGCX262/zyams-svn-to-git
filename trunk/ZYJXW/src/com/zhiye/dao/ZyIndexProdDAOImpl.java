package com.zhiye.dao;

import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.zhiye.common.bean.ZyIndex;
import com.zhiye.common.bean.ZyIndexProd;
import com.zhiye.common.bean.ZyIndexProdParams;

public class ZyIndexProdDAOImpl extends SqlMapClientDaoSupport implements
		ZyIndexProdDAO {

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public ZyIndexProdDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public void insert(ZyIndexProd record) {
		getSqlMapClientTemplate().insert("zy_index_prod.insert", record);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int updateByPrimaryKey(ZyIndexProd record) {
		int rows = getSqlMapClientTemplate().update(
				"zy_index_prod.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int updateByPrimaryKeySelective(ZyIndexProd record) {
		int rows = getSqlMapClientTemplate().update(
				"zy_index_prod.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public List selectByParams(ZyIndexProdParams Params) {
		List list = getSqlMapClientTemplate().queryForList(
				"zy_index_prod.selectByParams", Params);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public ZyIndexProd selectByPrimaryKey(Integer id) {
		ZyIndexProd key = new ZyIndexProd();
		key.setId(id);
		ZyIndexProd record = (ZyIndexProd) getSqlMapClientTemplate()
				.queryForObject("zy_index_prod.selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int deleteByParams(ZyIndexProdParams Params) {
		int rows = getSqlMapClientTemplate().delete(
				"zy_index_prod.deleteByParams", Params);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int deleteByPrimaryKey(Integer id) {
		ZyIndexProd key = new ZyIndexProd();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"zy_index_prod.deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int countByParams(ZyIndexProdParams Params) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"zy_index_prod.countByParams", Params);
		return count.intValue();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int updateByParamsSelective(ZyIndexProd record,
			ZyIndexProdParams Params) {
		UpdateByParamsParms parms = new UpdateByParamsParms(record, Params);
		int rows = getSqlMapClientTemplate().update(
				"zy_index_prod.updateByParamsSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	public int updateByParams(ZyIndexProd record, ZyIndexProdParams Params) {
		UpdateByParamsParms parms = new UpdateByParamsParms(record, Params);
		int rows = getSqlMapClientTemplate().update(
				"zy_index_prod.updateByParams", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table zy_index_prod
	 * 
	 * @abatorgenerated Mon May 21 20:34:33 CST 2012
	 */
	private static class UpdateByParamsParms extends ZyIndexProdParams {
		private Object record;

		public UpdateByParamsParms(Object record, ZyIndexProdParams Params) {
			super(Params);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	/**
	 * 根据MAP进行分页
	 */
	@SuppressWarnings("unchecked")
	public List selectPaginationByPageNum(Map<String, Object> map) {
		String m = "selectPaginationByPageNum";
		List<ZyIndexProd> indexProds = null;
		if (map != null) {
			indexProds = getSqlMapClientTemplate().queryForList(
					"zy_index_prod.selectPaginationByPageNum", map);
		} else {
			return null;
		}
		return indexProds;
	}

	public int countPaginationByPageNum(Map<String, Object> map) {
		String m = "countPaginationByPageNum";
		int result = 0;
		if (map != null) {
			result = (Integer) getSqlMapClientTemplate().queryForObject(
					"zy_index_prod.countPaginationByPageNum", map);
		} else {
			return 0;
		}
		return result;
	}

	public List selectIndexProdWithCorp(Map<String, Object> map) {
		List<ZyIndexProd> indexs = null;
		if (map != null) {
			indexs = getSqlMapClientTemplate().queryForList(
					"zy_index_prod.selectIndexProdWithCorp", map);
		} else {
			return null;
		}
		return indexs;
	}

	public List selectIndexProdWithProduct(Map<String, Object> map) {
		List<ZyIndexProd> indexs = null;
		if (map != null) {
			indexs = getSqlMapClientTemplate().queryForList(
					"zy_index_prod.selectIndexProdWithProduct", map);
		} else {
			return null;
		}
		return indexs;
	}
}